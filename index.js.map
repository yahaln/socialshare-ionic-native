{"version":3,"sources":["../../../src/@ionic-native/plugins/socialshare/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;GAUG;AACH,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;;;GAoBG;AAWH;IAAiC,+BAAiB;IAAlD;;IAgCA,CAAC;IA/BC;;;;;OAKG;IAEH,kCAAY,GAAZ,UAAa,IAAY,EAAE,IAAY;QACrC,MAAM,CAAC,CAAC,yDAAyD;IACnE,CAAC;IAED,qCAAe,GAAf,UAAgB,MAAW,IAAkB,MAAM,CAAC,CAAC,CAAC;IAGtD,sCAAgB,GAAhB,UAAiB,MAAW,IAAiB,MAAM,CAAC,CAAC,CAAC;IAGtD,wCAAkB,GAAlB,UAAmB,MAAW,IAAkB,MAAM,CAAC,CAAC,CAAC;IAGzD,sCAAgB,GAAhB,UAAiB,MAAW,IAAkB,MAAM,CAAC,CAAC,CAAC;IAGvD,0CAAoB,GAApB,UAAqB,MAAW,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEtD,sBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,0BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAvBA;QADC,OAAO,EAAE;;;;mDAGT;IAED;QADC,OAAO,EAAE;;;;sDAC4C;IAGtD;QADC,OAAO,EAAE;;;;uDAC4C;IAGtD;QADC,OAAO,EAAE;;;;yDAC+C;IAGzD;QADC,OAAO,EAAE;;;;uDAC6C;IAGvD;QADC,OAAO,EAAE;;;;2DACiD;IAxBhD,WAAW;QAVvB,MAAM,CAAC;YACN,UAAU,EAAE,aAAa;YACzB,MAAM,EAAE,sBAAsB;YAC9B,SAAS,EAAE,6BAA6B;YACxC,IAAI,EAAE,0DAA0D;YAChE,OAAO,EAAE,yJAAyJ;YAClK,gBAAgB,EAAE,CAAC,cAAc,EAAG,UAAU,CAAC;YAC/C,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,4DAA4D;SACpF,CAAC;OAEW,WAAW,CAgCvB;IAAD,kBAAC;CAhCD,AAgCC,CAhCgC,iBAAiB,GAgCjD;SAhCY,WAAW","file":"index.js","sourceRoot":"","sourcesContent":["/**\r\n * This is a template for new plugin wrappers\r\n *\r\n * TODO:\r\n * - Add/Change information below\r\n * - Document usage (importing, executing main functionality)\r\n * - Remove any imports that you are not using\r\n * - Remove all the comments included in this template, EXCEPT the @Plugin wrapper docs and any other docs you added\r\n * - Remove this note\r\n *\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n/**\r\n * @name socialshare\r\n * @description\r\n * This plugin does something\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { socialshare } from '@ionic-native/socialshare';\r\n *\r\n *\r\n * constructor(private socialshare: socialshare) { }\r\n *\r\n * ...\r\n *\r\n *\r\n * this.socialshare.functionName('Hello', 123)\r\n *   .then((res: any) => console.log(res))\r\n *   .catch((error: any) => console.error(error));\r\n *\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'socialshare',\r\n  plugin: 'cordova-plugin-share', // npm package name, example: cordova-plugin-camera\r\n  pluginRef: 'cordova.plugins.SocialShare', // the variable reference to call the plugin, example: navigator.geolocation\r\n  repo: 'https://github.com/yahaln/cordova-plugin-socialshare.git', // the github repository URL for the plugin\r\n  install: 'cordova plugin add https://github.com/yahaln/cordova-plugin-socialshare.git --variable WECHAT_APPID=your_wechat_appid --variable QQ_APPID=your_qq_appid', // OPTIONAL install command, in case the plugin requires variables\r\n  installVariables: ['WECHAT_APPID' , 'QQ_APPID'], // OPTIONAL the plugin requires variables\r\n  platforms: ['Android'] // Array of platforms supported, example: ['Android', 'iOS']\r\n})\r\n\r\nexport class SocialShare extends IonicNativePlugin {\r\n  /**\r\n   * This function does something\r\n   * @param arg1 {string} Some param to configure something\r\n   * @param arg2 {number} Another param to configure something\r\n   * @return {Promise<any>} Returns a promise that resolves when something happens\r\n   */\r\n  @Cordova()\r\n  functionName(arg1: string, arg2: number): Promise<any> {\r\n    return; // We add return; here to avoid any IDE / Compiler errors\r\n  }\r\n  @Cordova()\r\n  wechatShareText(params: any): Promise<any> { return; }\r\n\r\n  @Cordova()\r\n  wechatShareImage(params: any): Promise<any> {return; }\r\n\r\n  @Cordova()\r\n  wechatShareWebPage(params: any): Promise<any> { return; }\r\n\r\n  @Cordova()\r\n  QQShareImageText(params: any): Promise<any> { return; }\r\n\r\n  @Cordova()\r\n  QQZoneShareImageText(params: any): Promise<any> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}